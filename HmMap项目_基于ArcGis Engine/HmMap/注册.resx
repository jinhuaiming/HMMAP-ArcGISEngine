<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>